package plug

import (
	"fmt"

	data "UwdBot/database"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

func (w *Wars) GetShop(msg *tgbotapi.Message) string {
	weap := data.Weapon{}
	weapons, err := weap.GetAllWeapons()
	if err != nil {
		return "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω..."
	}
	reply := "***–£—é—Ç–Ω—ã–π shop üõí ***\n\n***–û—Ä—É–∂–∏–µ:***\n"
	for _, w := range weapons {
		reply += fmt.Sprintf(
			"%d) ___%s___ %düó°Ô∏è, %düí∞\n",
			w.ID,
			w.Name,
			w.Power,
			w.Cost,
		)
	}
	reply += "\n___–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å—Ç–∞—Ñ—Ñ:___\n–ü–æ—è–≤–∏—Ç—Å—è –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏...\n\n___–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä - —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ buy –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞___"
	return reply
}

func (w *Wars) buyItem(item int, msg *tgbotapi.Message) {
	var err error
	var user data.User
	user, err = user.FindUserByID(msg.From.ID)
	if err != nil {
		w.c.SendReplyToMessage(msg, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã /reg")
		return
	}
	var weapon data.Weapon
	weapon, err = weapon.GetWeaponsByID(item)
	if err != nil {
		w.c.SendReplyToMessage(msg, "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞!")
		return
	}

	if user.Coins >= weapon.Cost {
		user.DecreaseMoney(weapon.Cost)
		user.AddPower(weapon.Power)
		w.c.SendMarkdownReply(
			msg,
			fmt.Sprintf(
				"–°–ø–∏—Å–∞–Ω–æ ***%d***üí∞, –∫—É–ø–ª–µ–Ω(–∞): ___%s___!\n\n –ü—Ä–∏–±–∞–≤–ª–µ–Ω–æ %d –∫ –±–æ–µ–≤–æ–π –º–æ—â–∏!",
				weapon.Cost,
				weapon.Name,
				weapon.Power,
			),
		)
	} else {
		w.c.SendMarkdownReply(
			msg,
			fmt.Sprintf(
				"–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ***%d***üí∞, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å ___%s___!",
				weapon.Cost-user.Coins,
				weapon.Name,
			),
		)
	}
}
